module Fly
  class Configuration
    # Set the region where this instance of the application is deployed
    attr_accessor :current_region

    # Set the region where the primary database lives, i.e "ams"
    attr_accessor :primary_region

    # Automatically replay these HTTP methods in the primary region
    attr_accessor :replay_http_methods

    # Environment variable referencing the database URL.
    # Gets overwritten by this middleware in secondary regions, so must be interpolated
    # rather than defined directly in the configuration.
    attr_accessor :database_url_env_var

    # Cookie written and read by this middleware storing a UNIX timestamp.
    # Requests arriving before this timestamp will be replayed in the primary region.
    attr_accessor :replay_threshold_cookie

    # How long, in seconds, should all requests from the same client be replayed in the
    # primary region after a successful write replay
    attr_accessor :replay_threshold_in_seconds

    # Header generated by Fly revealing request timings. Multiple values in this header
    # mean the request was replayed.
    attr_accessor :fly_dispatch_header

    def initialize
      self.primary_region = ENV["PRIMARY_REGION"]
      self.current_region = ENV["FLY_REGION"]
      self.replay_http_methods = ["POST", "PUT", "PATCH", "DELETE"]
      self.database_url_env_var = "DATABASE_URL"
      self.replay_threshold_cookie = "fly-replay-threshold"
      self.replay_threshold_in_seconds = 5
      self.fly_dispatch_header = "Fly-Dispatch-Start"
    end

    def database_url
      ENV[database_url_env_var]
    end
  end
end
